// Generated by CoffeeScript 1.6.3
(function() {
  var exports;

  exports = {
    widgetsIndex: {
      name: "widgetsIndex",
      description: "Shows the list of existing widgets",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.widgets.find(function(error, widgets) {
          connection.error = error;
          connection.response = {
            widgets: widgets
          };
          return next(connection, false);
        });
      }
    },
    widgetsCreate: {
      name: "widgetsCreate",
      description: "Adds a new widget",
      inputs: {
        required: ["name"],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        api.widgets.create({
          name: connection.params.name,
          description: connection.params.name
        }, function(error, widget) {});
        connection.error = error;
        connection.response = {
          widget: widget
        };
        return next(connection, false);
      }
    },
    widgetShow: {
      name: "widgetShow",
      description: "Shows an existing widget",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.widgets.get(connection.params.id, function(error, widget) {
          connection.error = error;
          connection.response = {
            widget: widget
          };
          return next(connection, false);
        });
      }
    },
    widgetUpdate: {
      name: "widgetUpdate",
      description: "Edits an existing widget of a site",
      inputs: {
        required: [],
        optional: ["name", "description"]
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.widgets.get(connection.params.id, function(error, widget) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return widget.save({
              name: connection.params.name,
              description: connection.params.description
            }, function(error) {
              connection.error = error;
              connection.response = {
                widget: widget
              };
              return next(connection, false);
            });
          }
        });
      }
    },
    widgetDestroy: {
      name: "widgetDestroy",
      description: "Removes an existing widget",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.widgets.get(connection.params.id, function(error, widget) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return widget.remove(function(error) {
              connection.error = error;
              connection.response = {
                message: "removed successfully"
              };
              return next(connection, false);
            });
          }
        });
      }
    }
  };

  module.exports = exports;

}).call(this);
