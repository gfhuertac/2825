// Generated by CoffeeScript 1.6.3
(function() {
  var exports;

  exports = {
    tokensIndex: {
      name: "tokensIndex",
      description: "Shows the list of existing tokens",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.tokens.find(function(error, tokens) {
          connection.error = error;
          connection.response = {
            tokens: tokens
          };
          return next(connection, false);
        });
      }
    },
    tokensCreate: {
      name: "tokensCreate",
      description: "Adds a new token",
      inputs: {
        required: ["tokenType"],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.tokens.create({
          tokenType: connection.params.tokenType,
          data: api.configData.generator()
        }, function(error, token) {
          connection.error = error;
          connection.response = {
            token: token
          };
          return next(connection, false);
        });
      }
    },
    tokenShow: {
      name: "tokenShow",
      description: "Shows an existing token",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.tokens.get(connection.params.id, function(error, token) {
          connection.error = error;
          connection.response = {
            token: token
          };
          return next(connection, false);
        });
      }
    },
    tokenUpdate: {
      name: "tokenUpdate",
      description: "Edits an existing token of a site",
      inputs: {
        required: [],
        optional: ["tokenType"]
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.tokens.get(connection.params.id, function(error, token) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return token.save({
              tokenType: connection.params.type,
              data: api.configData.generator()
            }, function(error) {
              connection.error = error;
              connection.response = {
                token: token
              };
              return next(connection, false);
            });
          }
        });
      }
    },
    tokenDestroy: {
      name: "tokenDestroy",
      description: "Removes an existing token",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.tokens.get(connection.params.id, function(error, token) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return token.remove(function(error) {
              connection.error = error;
              connection.response = {
                message: "removed successfully"
              };
              return next(connection, false);
            });
          }
        });
      }
    }
  };

  module.exports = exports;

}).call(this);
