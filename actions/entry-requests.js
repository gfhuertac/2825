// Generated by CoffeeScript 1.6.3
(function() {
  var exports;

  exports = {
    entryRequestsIndex: {
      name: "entryRequestsIndex",
      description: "Shows the list of existing entry requests",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.entryRequests.find(function(error, entryrequests) {
          connection.error = error;
          connection.response = {
            entryrequests: entryrequests
          };
          return next(connection, false);
        });
      }
    },
    entryRequestsCreate: {
      name: "entryRequestsCreate",
      description: "Adds a new entry request",
      inputs: {
        required: ["name"],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.entryRequests.create({
          name: connection.params.name,
          description: connection.params.name
        }, function(error, entryrequest) {
          connection.error = error;
          connection.response = {
            entryrequest: entryrequest
          };
          return next(connection, false);
        });
      }
    },
    entryRequestShow: {
      name: "entryRequestShow",
      description: "Shows an existing entry request",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.entryRequests.get(connection.params.id, function(error, entryrequest) {
          connection.error = error;
          connection.response = {
            entryrequest: entryrequest
          };
          return next(connection, false);
        });
      }
    },
    entryRequestUpdate: {
      name: "entryRequestUpdate",
      description: "Edits an existing entry request of a site",
      inputs: {
        required: ["name"],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.entryRequests.get(connection.params.id, function(error, entryrequest) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return entryrequest.save({
              name: connection.params.name,
              description: connection.params.description
            }, function(error) {
              connection.error = error;
              connection.response = {
                entryrequest: entryrequest
              };
              return next(connection, false);
            });
          }
        });
      }
    },
    entryRequestsDestroy: {
      name: "entryRequestsDestroy",
      description: "Removes an existing entry request",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.entryRequests.get(connection.params.id, function(error, entryrequest) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return entryrequest.remove(function(error) {
              connection.error = error;
              connection.response = {
                message: "removed successfully"
              };
              return next(connection, false);
            });
          }
        });
      }
    }
  };

  module.exports = exports;

}).call(this);
