// Generated by CoffeeScript 1.6.3
(function() {
  var exports;

  exports = {
    identitiesIndex: {
      name: "identitiesIndex",
      description: "Shows the list of existing identities",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.Identity.find(function(error, identities) {
          connection.error = error;
          connection.response = {
            identities: identities
          };
          return next(connection, false);
        });
      }
    },
    identitiesCreate: {
      name: "identitiesCreate",
      description: "Adds a new identity",
      inputs: {
        required: ["firstName", "lastName", "email"],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.Identity.create({
          firstName: connection.params.firstName,
          lastName: connection.params.lastName,
          email: connection.params.email
        }, function(error, identity) {
          connection.error = error;
          connection.response = {
            identity: identity
          };
          return next(connection, false);
        });
      }
    },
    identityShow: {
      name: "identityShow",
      description: "Shows an existing identity",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.Identity.get(connection.params.id, function(error, identity) {
          connection.error = error;
          connection.response = {
            identity: identity
          };
          return next(connection, false);
        });
      }
    },
    identityUpdate: {
      name: "identityUpdate",
      description: "Edits an existing identity of a site",
      inputs: {
        required: [],
        optional: ["firstName", "lastName", "email"]
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.Identity.get(connection.params.id, function(error, identity) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return identity.save({
              firstName: connection.params.firstName,
              lastName: connection.params.lastName,
              email: connection.params.email
            }, function(error) {
              connection.error = error;
              connection.response = {
                identity: identity
              };
              return next(connection, false);
            });
          }
        });
      }
    },
    identityDestroy: {
      name: "identityDestroy",
      description: "Removes an existing identity",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.Identity.get(connection.params.id, function(error, identity) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return identity.remove(function(error) {
              connection.error = error;
              connection.response = {
                message: "removed successfully"
              };
              return next(connection, false);
            });
          }
        });
      }
    }
  };

  module.exports = exports;

}).call(this);
