// Generated by CoffeeScript 1.6.3
(function() {
  var exports;

  exports = {
    sitesIndex: {
      name: "sitesIndex",
      description: "Shows the list of existing sites",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.sites.find(function(error, sites) {
          connection.error = error;
          connection.response = {
            sites: sites
          };
          return next(connection, false);
        });
      }
    },
    sitesCreate: {
      name: "sitesCreate",
      description: "Adds a new site",
      inputs: {
        required: ["name"],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.sites.create({
          name: connection.params.name
        }, function(error, site) {
          connection.error = error;
          connection.response = {
            site: site
          };
          return next(connection, false);
        });
      }
    },
    siteShow: {
      name: "siteShow",
      description: "Shows an existing site",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.sites.get(connection.params.id, function(error, site) {
          connection.error = error;
          connection.response = {
            site: site
          };
          return next(connection, false);
        });
      }
    },
    siteUpdate: {
      name: "siteUpdate",
      description: "Edits an existing site of a site",
      inputs: {
        required: [],
        optional: ["name"]
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.sites.get(connection.params.id, function(error, site) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return site.save({
              name: connection.params.name
            }, function(error) {
              connection.error = error;
              connection.response = {
                site: site
              };
              return next(connection, false);
            });
          }
        });
      }
    },
    sitesDestroy: {
      name: "sitesDestroy",
      description: "Removes an existing site",
      inputs: {
        required: [],
        optional: []
      },
      authenticated: true,
      outputExample: {},
      version: 1.0,
      run: function(api, connection, next) {
        return api.sites.get(connection.params.id, function(error, site) {
          if (error) {
            connection.error = error;
            return next(connection, false);
          } else {
            return site.remove(function(error) {
              connection.error = error;
              connection.response = {
                message: "removed successfully"
              };
              return next(connection, false);
            });
          }
        });
      }
    }
  };

  module.exports = exports;

}).call(this);
